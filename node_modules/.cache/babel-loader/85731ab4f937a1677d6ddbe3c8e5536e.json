{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\desktop\\\\my-money\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Dashboard } from \"./components/Dashboard/indesx\";\nimport { Header } from \"./components/Header\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\nimport Modal from 'react-modal';\nimport { GlobalStyle } from \"./styles/global\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); //acessibilidade\n\nexport function App() {\n  _s();\n\n  const [isnewTransactionModalOpen, setIsnewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsnewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsnewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: handleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DarkModeToggleButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isnewTransactionModalOpen,\n      onRequestClose: handleCloseNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4kyDpuf2YIxOA+Ar4tmb13YZIwE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bruno/desktop/my-money/src/App.tsx"],"names":["useState","Dashboard","Header","TransactionsProvider","Modal","GlobalStyle","NewTransactionModal","setAppElement","App","isnewTransactionModalOpen","setIsnewTransactionModalOpen","handleOpenNewTransactionModal","handleCloseNewTransactionModal"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,mBAAT,QAAoC,kCAApC;;AAGAF,KAAK,CAACG,aAAN,CAAoB,OAApB,E,CAA4B;;AAE5B,OAAO,SAASC,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IAA4DV,QAAQ,CAAC,KAAD,CAA1E;;AAGA,WAASW,6BAAT,GAAyC;AACvCD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACD;;AAED,WAASE,8BAAT,GAA0C;AACxCF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACD;;AACD,sBACE,QAAC,oBAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,yBAAyB,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,mBAAD;AACE,MAAA,MAAM,EAAEF,yBADV;AAEE,MAAA,cAAc,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvBeJ,G;;KAAAA,G","sourcesContent":["import { useState } from \"react\";\r\nimport { Dashboard } from \"./components/Dashboard/indesx\";\r\nimport { Header } from \"./components/Header\";\r\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\r\nimport Modal from 'react-modal'\r\n\r\nimport { GlobalStyle } from \"./styles/global\";\r\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\r\nimport DarkModeToggle from \"./DarkModeToggleButton\";\r\n\r\nModal.setAppElement('#root')//acessibilidade\r\n\r\nexport function App() {\r\n  const [isnewTransactionModalOpen, setIsnewTransactionModalOpen] = useState(false);\r\n\r\n\r\n  function handleOpenNewTransactionModal() {\r\n    setIsnewTransactionModalOpen(true)\r\n  }\r\n\r\n  function handleCloseNewTransactionModal() {\r\n    setIsnewTransactionModalOpen(false)\r\n  }\r\n  return (\r\n    <TransactionsProvider >\r\n      <GlobalStyle />\r\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\r\n      <Dashboard />\r\n      <DarkModeToggleButton />\r\n      <NewTransactionModal\r\n        isOpen={isnewTransactionModalOpen}\r\n        onRequestClose={handleCloseNewTransactionModal}\r\n      />\r\n    </TransactionsProvider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}