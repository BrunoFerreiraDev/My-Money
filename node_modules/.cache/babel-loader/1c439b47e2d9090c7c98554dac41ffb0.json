{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\my-money\\\\src\\\\components\\\\NewTransactionModal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useTransactions } from '../../hooks/useTransactions';\nimport Modal from 'react-modal';\nimport incomeImg from \"../../assets/income.svg\";\nimport outcomeImg from \"../../assets/outcome.svg\";\nimport closeImg from \"../../assets/close.svg\";\nimport { Container, RadioBox, TransactionTypeContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewTransactionModal({\n  isOpen,\n  onRequestClose\n}) {\n  _s();\n\n  const {\n    createTransaction\n  } = useTransactions();\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('deposit'); //esse tipo pode ser deposit ou withdraw \n\n  async function handleCreateNewTransaction(event) {\n    event.preventDefault(); //previne o comportamento padrÃ£o\n    //@ts-ignore\n\n    await createTransaction({\n      title,\n      amount,\n      category,\n      type\n    });\n    setTitle('');\n    setAmount(0);\n    setCategory('');\n    setType('deposit');\n    onRequestClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose //fecha o modal setando o estado para false\n    ,\n    overlayClassName: \"react-modal-overlay\" //cria uma class para a parte de fora do modal\n    ,\n    className: \"react-modal-content\" //cria uma class para o modal\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onRequestClose,\n      className: \"react-modal-close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeImg,\n        alt: \"Fechar modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      onSubmit: handleCreateNewTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastra transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"T\\xEDtulo\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Valor\",\n        value: amount,\n        onChange: event => setAmount(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TransactionTypeContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: () => setType('deposit'),\n          isActive: type === 'deposit',\n          isActiveColor: \"green\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: incomeImg,\n            alt: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: () => setType('withdraw'),\n          isActive: type === 'withdraw',\n          isActiveColor: \"red\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: outcomeImg,\n            alt: \"Sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Categoria\",\n        value: category,\n        onChange: event => setCategory(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTransactionModal, \"1drjawtz0ZUvKnrTru3ykJXpB0k=\", false, function () {\n  return [useTransactions];\n});\n\n_c = NewTransactionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransactionModal\");","map":{"version":3,"sources":["C:/Users/bruno/Desktop/my-money/src/components/NewTransactionModal/index.tsx"],"names":["useState","useTransactions","Modal","Container","RadioBox","TransactionTypeContainer","NewTransactionModal","isOpen","onRequestClose","createTransaction","title","setTitle","amount","setAmount","category","setCategory","type","setType","handleCreateNewTransaction","event","preventDefault","closeImg","target","value","Number","incomeImg","outcomeImg"],"mappings":"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","sourcesContent":["import { FormEvent, useState } from 'react'\r\nimport { useTransactions } from '../../hooks/useTransactions'\r\nimport Modal from 'react-modal'\r\n\r\nimport incomeImg from '../../assets/income.svg'\r\nimport outcomeImg from '../../assets/outcome.svg'\r\nimport closeImg from '../../assets/close.svg'\r\n\r\nimport { Container, RadioBox, TransactionTypeContainer } from './styles'\r\n\r\ninterface NewTransactionModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose: () => void;\r\n}\r\n\r\n\r\nexport function NewTransactionModal({ isOpen, onRequestClose }: NewTransactionModalProps) {\r\n    const { createTransaction } = useTransactions()\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [category, setCategory] = useState('');\r\n    const [type, setType] = useState('deposit');//esse tipo pode ser deposit ou withdraw \r\n\r\n    async function handleCreateNewTransaction(event: FormEvent) {\r\n        event.preventDefault();//previne o comportamento padrÃ£o\r\n        //@ts-ignore\r\n        await createTransaction({\r\n            title,\r\n            amount,\r\n            category,\r\n            type\r\n        })\r\n        setTitle('')\r\n        setAmount(0)\r\n        setCategory('')\r\n        setType('deposit')\r\n        onRequestClose()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            onRequestClose={onRequestClose}//fecha o modal setando o estado para false\r\n            overlayClassName=\"react-modal-overlay\" //cria uma class para a parte de fora do modal\r\n            className=\"react-modal-content\" //cria uma class para o modal\r\n        >\r\n            <button\r\n                type=\"button\"\r\n                onClick={onRequestClose}\r\n                className=\"react-modal-close\"\r\n            >\r\n                <img src={closeImg} alt=\"Fechar modal\" />\r\n            </button>\r\n            <Container onSubmit={handleCreateNewTransaction}>\r\n                <h2>Cadastra transaÃ§Ã£o</h2>\r\n\r\n                <input\r\n                    placeholder=\"TÃ­tulo\"\r\n                    value={title}\r\n                    onChange={event => setTitle(event.target.value)}\r\n                />\r\n\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Valor\"\r\n                    value={amount}\r\n                    onChange={event => setAmount(Number(event.target.value))}\r\n                />\r\n\r\n                <TransactionTypeContainer>\r\n                    <RadioBox\r\n                        type=\"button\"\r\n                        onClick={() => setType('deposit')}\r\n                        isActive={type === 'deposit'}\r\n                        isActiveColor=\"green\"\r\n                    >\r\n                        <img src={incomeImg} alt=\"Entrada\" />\r\n                        <span>Entrada</span>\r\n                    </RadioBox>\r\n\r\n                    <RadioBox\r\n                        type=\"button\"\r\n                        onClick={() => setType('withdraw')}\r\n                        isActive={type === 'withdraw'}\r\n                        isActiveColor=\"red\"\r\n                    >\r\n                        <img src={outcomeImg} alt=\"SaÃ­da\" />\r\n                        <span>SaÃ­da</span>\r\n                    </RadioBox>\r\n                </TransactionTypeContainer>\r\n\r\n                <input\r\n                    placeholder=\"Categoria\"\r\n                    value={category}\r\n                    onChange={event => setCategory(event.target.value)}\r\n                />\r\n\r\n                <button type=\"submit\">\r\n                    Cadastrar\r\n                </button>\r\n            </Container>\r\n        </Modal >\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}